---
const { canvaName } = Astro.props;
---

<script>
  import { Application } from "@splinetool/runtime";
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);
  const canvas = document.getElementById("model1") as HTMLCanvasElement;
  const moveCanvas = document.getElementById("rotationScene");

  const spline = new Application(canvas, { renderMode: "auto" });

  spline
    .load("https://draft.spline.design/sggTaa9EU5TNkqYK/scene.splinecode")
    .then(() => {
      const escena = spline.findObjectByName("Scene");
      const escenaJovenes = spline.findObjectByName("Jovenes");

      const PlataformJovenes = spline.findObjectByName("PlataformJovenes");

      const escenaAdultos = spline.findObjectByName("Adultos");

      const PlataformAdultos = spline.findObjectByName("PlataformAdultos");

      if (
        escena &&
        PlataformJovenes &&
        escenaJovenes &&
        escenaAdultos &&
        PlataformAdultos
      ) {

        
        gsap.set(escena.scale, {
          x:0.8,
          y:0.8,
          z:0.8
         
        });

        function mapRange(value, inputMin, inputMax, outputMin, outputMax) {
          return (
            outputMin +
            ((value - inputMin) * (outputMax - outputMin)) /
              (inputMax - inputMin)
          );
        }

        moveCanvas.addEventListener("mousemove", (e) => {
          const rect = moveCanvas.getBoundingClientRect();
          const x = e.clientX - rect.left;
          const y = e.clientY - rect.top;
          const xPercent = x / rect.width;
          const yPercent = y / rect.height;

          gsap.to(escenaJovenes.rotation, {
            x: mapRange(yPercent, 0, 1, -Math.PI / 10, Math.PI / 15),
            y: mapRange(xPercent, 0, 1, -Math.PI / 8, Math.PI / 8),
            duration: 0.8,
            ease: "none",
          });
          gsap.to(escenaAdultos.rotation, {
            x: mapRange(yPercent, 0, 1, -Math.PI / 10, Math.PI / 15),
            y: mapRange(xPercent, 0, 1, -Math.PI / 8, Math.PI / 8),
            duration: 0.8,
            ease: "none",
          });
        });

        moveCanvas.addEventListener("mouseleave", () => {
          gsap.to(escenaJovenes.rotation, {
            x: 0,
            y: 0,
            duration: 0.8,
            ease: "none",
          });
          gsap.to(escenaAdultos.rotation, {
            x: 0,
            y: 0,
            duration: 0.8,
            ease: "none",
          });
        });

        window.addEventListener("resize", () => {
          const rect = moveCanvas.getBoundingClientRect();
          spline.setSize(rect.width, rect.height);
        });

        const anchorJovenes = document.getElementById("JovenesBoton");
        anchorJovenes.addEventListener("mouseover", () => {
          gsap.to(escenaJovenes.scale, {
            x: 1.1,
            y: 1.1,
            z: 1.1,
            duration: 0.2,
            ease: "none",
          });
        });
        anchorJovenes.addEventListener("mouseout", () => {
          gsap.to(escenaJovenes.scale, {
            x: 1,
            y: 1,
            z: 1,
            duration: 0.2,
            ease: "none",
          });
        });

        const anchorAdultos = document.getElementById("AdultoBoton");
        anchorAdultos.addEventListener("mouseover", () => {
          gsap.to(escenaAdultos.scale, {
            x: 1.1,
            y: 1.1,
            z: 1.1,
            duration: 0.2,
            ease: "none",
          });
        });
        anchorAdultos.addEventListener("mouseout", () => {
          gsap.to(escenaAdultos.scale, {
            x: 1,
            y: 1,
            z: 1,
            duration: 0.2,
            ease: "none",
          });
        });
      }
    });
</script>

<canvas
  id="model1"
  class="bg-transparent max-w-full max-h-full pointer-events-auto absolute top-0 left-0 animate-fade-in animate-duration-200 animate-delay-250"
></canvas>
